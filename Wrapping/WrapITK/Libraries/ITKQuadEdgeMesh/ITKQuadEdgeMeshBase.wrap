WRAP_INCLUDE("itkGeometricalQuadEdge.h")
WRAP_INCLUDE("itkQuadEdgeMeshPoint.h")
WRAP_INCLUDE("itkMesh.h")
WRAP_INCLUDE("itkQuadEdgeMeshTraits.h")

FILTER_DIMS(d3 3)

#this needs to be done in 2d and 3d in any case
WRAP_CLASS("itk::MapContainer" POINTER)
#  foreach(d ${WRAP_ITK_DIMS})
  if(d3)
    WRAP_TEMPLATE("ULQEMPF3" "unsigned long, itk::QuadEdgeMeshPoint< float, 3 >")
#   WRAP_TEMPLATE("MD3QBAIUL" "itk::Mesh<double, 3u, itk::QuadEdgeMeshTraits<double, 3, bool, bool, float, float> >::BoundaryAssignmentIdentifier, unsigned long")
    WRAP_TEMPLATE("ULCIDQEMCTI${d}" "unsigned long, itk::CellInterface< double, itk::QuadEdgeMeshCellTraitsInfo< 3 > >*")
  endif()
#  endforeach(d)
END_WRAP_CLASS()

# for the time being this filter is only wrapped for 3D
# for later, we need to reinject this:
# foreach(d ${WRAP_ITK_DIMS})

WRAP_CLASS("itk::Mesh" POINTER)
  if(d3)
    WRAP_TEMPLATE("${ITKM_D}3Q" "${ITKT_D},3,itk::QuadEdgeMeshTraits< ${ITKT_D},3,${ITKT_B},${ITKT_B},${ITKT_F},${ITKT_F} >")
  endif()
END_WRAP_CLASS()

WRAP_CLASS("itk::QuadEdgeMesh" POINTER)
  if(d3)
    WRAP_TEMPLATE("${ITKM_D}3" "${ITKT_D},3")
  endif()
END_WRAP_CLASS()

WRAP_CLASS("itk::BoundingBox" POINTER)
  if(d3)
    WRAP_TEMPLATE("UL3FMCULQEMPF3" "unsigned long, 3, float, itk::MapContainer< unsigned long, itk::QuadEdgeMeshPoint< float, 3 > >")
  endif()
END_WRAP_CLASS()

WRAP_CLASS("itk::PointSet" POINTER)
  if(d3)
    WRAP_TEMPLATE("${ITKM_D}3Q" "${ITKT_D},3,itk::QuadEdgeMeshTraits< ${ITKT_D},3,${ITKT_B},${ITKT_B},${ITKT_F},${ITKT_F} >")
  endif()
END_WRAP_CLASS()

WRAP_CLASS("itk::MeshSource" POINTER)
  if(d3)
    WRAP_TEMPLATE("MD3Q" "itk::Mesh< ${ITKT_D},3,itk::QuadEdgeMeshTraits< ${ITKT_D},3,${ITKT_B},${ITKT_B},${ITKT_F},${ITKT_F} > >")
    WRAP_TEMPLATE("QEM${ITKM_D}3" "itk::QuadEdgeMesh< ${ITKT_D},3 >")
  endif()
END_WRAP_CLASS()

WRAP_CLASS("itk::MeshToMeshFilter" POINTER)
  if(d3)
    WRAP_TEMPLATE("MD3QMD3Q" "itk::Mesh< ${ITKT_D},3,itk::QuadEdgeMeshTraits< ${ITKT_D},3,${ITKT_B},${ITKT_B},${ITKT_F},${ITKT_F} > >, itk::Mesh< ${ITKT_D},3,itk::QuadEdgeMeshTraits< ${ITKT_D},3,${ITKT_B},${ITKT_B},${ITKT_F},${ITKT_F} > >")
    WRAP_TEMPLATE("QEM${ITKM_D}3QEM${ITKM_D}3" "itk::QuadEdgeMesh< ${ITKT_D},3 >, itk::QuadEdgeMesh< ${ITKT_D},3 >")
  endif()
END_WRAP_CLASS()
